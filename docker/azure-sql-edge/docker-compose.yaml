version: "3.5"
name: cqrs-meets-hexagonal

services:
  database:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: cqrs-meets-hexagonal-azure-sql
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Aut0mat0rs!
      TZ: UTC
    ports:
      - "1434:1433"
    volumes:
      - ./data:/var/opt/mssql/data
      - ./log:/var/opt/mssql/log
      - ./secrets:/var/opt/mssql/secrets

  databaseSetup:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: cqrs-meets-hexagonal-azure-sql-setup
    depends_on:
      - database
    restart: "no"
    environment:
      TZ: UTC
    volumes:
      - ./local:/opt/startup-scripts
    entrypoint: [ "bash", "-c", "while ! /opt/mssql-tools/bin/sqlcmd -S cqrs-meets-hexagonal-azure-sql -U SA -P 'Aut0mat0rs!' -Q \"$$(cat /opt/startup-scripts/local-db-setup.sql)\"; do sleep 5; done" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22182:2182

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29093:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
networks:
  cqrs-meets-hexagonal:
    external: true
